/**
 * Dotfile example
 *
 * Dotfile will be a command line tooling helper which will allow devs to
 * manage their setup/commands using easy command line syntax such as:
 *
 * dot firsttimesetup           # Sets up env for the first time
 *
 * dot use <config_file_path>   # Uses specified config file for all subsequent dot commands
 *                              # Symlinks config path to ~/.dotfile
 *
 * dot install <package>        # use this?
 *
 * dot run <package>
 * dot run                      # this should just run ?? whatever is in your current dir
 *
 * Params:
 * --config, -c <path>          # Path to dotfile.config, if not supplied will look at ~/.dotfile
 *                              # Should be called with firsttimesetup only. A sym link should be created
 *                              # linking ~/.dotfile to -c so everyone will have the same dotfile
 *
 *
 * Why use this?
 * - Everyone runs the same path/code/commands, unified runs
 * - No need to keep making scripts that does stuff
 * - super easy environment setup
 * - (should) work with virtualenv to set up virtualenv
 * - (should) work with any type of command line application that has lots of options
 * - (should) support custom commands
 */
{
    ////// DRAFT ///////
    /**
     * Need support for:
     * - Installing basic applications
     * - Running any command line easily so people don't have to remember what to run
     *     - Maybe add support for allowing people to add logic ie. scripting within dot?
     * - Running any command that is simple or complicated, complicated = many flags
     */

    /**
     * Dependencies that are needed by the apps
     *
     * Maybe should have "core" apps to install?
     */
    "deps": {
        "brew" : {
            "version": "latest",
            "darwin": true,
            "linux": true
        },
        "node" : {
            // How to support node on ubuntu... node on ubuntu
            // needs to be installed using a diff repo
            "version": "latest",
            "darwin": true,
            "linux": true
        }
    }

}
